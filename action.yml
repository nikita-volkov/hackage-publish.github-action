name: Publish to Hackage
description: Publish Haskell packages to Hackage

branding:
  icon: 'upload'
  color: 'green'

inputs:
  token:
    description: 'Authentication token for Hackage'
    required: true

  server:
    description: 'URL to the Hackage server'
    required: false
    default: 'https://hackage.haskell.org'

  publish:
    description: 'A flag indicating whether to publish the release on Hackage. Uploads a release candidate if set to false'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:

    - name: Publish packages
      shell: bash
      run: |
          PACKAGE_TARBALL=$(cabal sdist | tail -1)

          HACKAGE_AUTH_HEADER="Authorization: X-ApiKey ${{ inputs.token }}"

          PACKAGE_NAME=$(basename ${PACKAGE_TARBALL%.*.*})
          
          if [ "${{ inputs.publish }}" == "true" ]
            then
              TARGET_URL="${{ inputs.server }}/packages/upload";
              PACKAGE_URL="${{ inputs.server }}/package/$PACKAGE_NAME"
              HACKAGE_STATUS=$(curl --header "${HACKAGE_AUTH_HEADER}" --silent --head -w %{http_code} -XGET --anyauth $PACKAGE_URL -o /dev/null)
            else
              TARGET_URL="${{ inputs.server }}/packages/candidates";
              PACKAGE_URL="${{ inputs.server }}/package/$PACKAGE_NAME/candidate"
              HACKAGE_STATUS=404
          fi

          if [ "$HACKAGE_STATUS" != "404" ]
          then
            echo "Package ${PACKAGE_NAME}" already exists on Hackage.
            exit 1
          fi

          echo "Uploading ${PACKAGE_NAME} to ${TARGET_URL}"
          curl -X POST -f --header "${HACKAGE_AUTH_HEADER}" ${TARGET_URL} -F "package=@$PACKAGE_TARBALL"
          echo "Uploaded ${PACKAGE_URL}"
